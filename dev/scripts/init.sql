-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

CREATE SCHEMA userdata;

CREATE SCHEMA rbac;

CREATE SCHEMA scripts;

CREATE SCHEMA system;

CREATE TABLE IF NOT EXISTS userdata.organizations
(
    id bigserial NOT NULL,
    name character varying(128) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS userdata.teams
(
    id bigserial NOT NULL,
    name character varying(128) NOT NULL,
    organization_id bigint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS userdata.teams_users
(
    team_id bigint NOT NULL,
    user_id bigint NOT NULL,
    visible boolean NOT NULL DEFAULT true
);

CREATE TABLE IF NOT EXISTS userdata.users
(
    id bigserial NOT NULL,
    name character varying(128) NOT NULL,
    email character varying(320) NOT NULL,
    provider character varying(16) NOT NULL,
    provider_details jsonb NOT NULL,
    password character varying(512),
    verified boolean NOT NULL DEFAULT false,
    organization_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS rbac.resource
(
    id bigserial NOT NULL,
    resource character varying(32) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS rbac.actions
(
    id bigserial NOT NULL,
    action character varying(16) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS rbac.resource_actions
(
    id bigserial NOT NULL,
    resource_id bigint NOT NULL,
    actions_id bigint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS rbac.roles
(
    id bigserial NOT NULL,
    name character varying(256) NOT NULL,
    organization_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS rbac.resource_actions_roles
(
    resource_actions_id bigint NOT NULL,
    role_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS rbac.user_team_roles
(
    team_id bigint NOT NULL,
    role_id bigint NOT NULL,
    user_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS userdata.wallet
(
    id bigserial NOT NULL,
    linked_type character varying(8) NOT NULL,
    linked_id bigint NOT NULL,
    value bigint NOT NULL DEFAULT 0,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS rbac.user_organization_roles
(
    user_id bigint NOT NULL,
    role_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS userdata.notifications
(
    id bigserial NOT NULL,
    user_id bigint NOT NULL,
    arrived_at timestamp without time zone NOT NULL,
    silent boolean NOT NULL DEFAULT false,
    read boolean NOT NULL DEFAULT false,
    title character varying(1024) NOT NULL,
    body jsonb NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS userdata.invitations
(
    id character(64) NOT NULL,
    user_id bigint NOT NULL,
    resource_id bigint NOT NULL,
    resource_type character varying(8) NOT NULL,
    message character varying(1024) NOT NULL,
    role_id bigint NOT NULL,
    accepted_at timestamp without time zone,
    accepted boolean NOT NULL DEFAULT false,
    PRIMARY KEY (id, accepted)
);

CREATE TABLE IF NOT EXISTS system.batch_jobs
(
    id bigserial NOT NULL,
    service character varying(16) NOT NULL,
    item character varying(1) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    status boolean NOT NULL,
    done bigint NOT NULL,
    total bigint NOT NULL,
    details jsonb NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS system.verify_email
(
    user_id bigint NOT NULL,
    code character varying(64) NOT NULL,
    expiry timestamp without time zone NOT NULL
);

CREATE TABLE IF NOT EXISTS system.redis_nodes
(
    id bigserial NOT NULL,
    host inet NOT NULL,
    created_at timestamp without time zone NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS system.script_nodes
(
    redis_node bigint NOT NULL,
    script_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS scripts.scripts
(
    id bigserial NOT NULL,
    name character varying(128) NOT NULL,
    throttle bigint NOT NULL,
    max_runs bigint NOT NULL,
    pause_at jsonb NOT NULL,
    scale jsonb NOT NULL,
    logs jsonb NOT NULL,
    executor_type character varying(8) NOT NULL,
    executor_config jsonb NOT NULL,
    max_runtime bigint NOT NULL,
    step_max_runtime bigint NOT NULL,
    secrets jsonb NOT NULL,
    linked_type character varying(8) NOT NULL,
    linked_id bigint NOT NULL,
    created_by bigint NOT NULL,
    updated_by bigint NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS scripts.script_access
(
    script_id bigint NOT NULL,
    access_id bigint NOT NULL,
    action_id bigint NOT NULL,
    access_type character varying(16),
    PRIMARY KEY (script_id, access_id, action_id)
);

ALTER TABLE IF EXISTS userdata.teams
    ADD FOREIGN KEY (organization_id)
    REFERENCES userdata.organizations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS userdata.teams_users
    ADD FOREIGN KEY (team_id)
    REFERENCES userdata.teams (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS userdata.teams_users
    ADD FOREIGN KEY (user_id)
    REFERENCES userdata.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS userdata.users
    ADD FOREIGN KEY (organization_id)
    REFERENCES userdata.organizations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.resource_actions
    ADD FOREIGN KEY (resource_id)
    REFERENCES rbac.resource (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.resource_actions
    ADD FOREIGN KEY (actions_id)
    REFERENCES rbac.actions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.roles
    ADD FOREIGN KEY (organization_id)
    REFERENCES userdata.organizations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.resource_actions_roles
    ADD FOREIGN KEY (resource_actions_id)
    REFERENCES rbac.resource_actions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.resource_actions_roles
    ADD FOREIGN KEY (role_id)
    REFERENCES rbac.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.user_team_roles
    ADD FOREIGN KEY (team_id)
    REFERENCES userdata.teams (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.user_team_roles
    ADD FOREIGN KEY (role_id)
    REFERENCES rbac.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.user_team_roles
    ADD FOREIGN KEY (user_id)
    REFERENCES userdata.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.user_organization_roles
    ADD FOREIGN KEY (user_id)
    REFERENCES userdata.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS rbac.user_organization_roles
    ADD FOREIGN KEY (role_id)
    REFERENCES rbac.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS userdata.notifications
    ADD FOREIGN KEY (user_id)
    REFERENCES userdata.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS userdata.invitations
    ADD FOREIGN KEY (user_id)
    REFERENCES userdata.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS userdata.invitations
    ADD FOREIGN KEY (role_id)
    REFERENCES rbac.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS system.script_nodes
    ADD FOREIGN KEY (redis_node)
    REFERENCES system.redis_nodes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS system.script_nodes
    ADD FOREIGN KEY (script_id)
    REFERENCES scripts.scripts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS scripts.script_access
    ADD FOREIGN KEY (script_id)
    REFERENCES scripts.scripts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

/* INITIAL VALUES */

INSERT INTO rbac.actions(action) VALUES
    ('CREATE'),
    ('READ'),
    ('UPDATE'),
    ('DELETE'),
    ('INVITE');

INSERT INTO rbac.resource(resource) VALUES
    ('GENERAL_METADATA'),
    ('RESTRICTED_METADATA'),
    ('USER'),
    ('ROLE'),
    ('TEAM'),
    ('SCRIPT');


INSERT INTO rbac.resource_actions(resource_id, actions_id)
    SELECT r.id, a.id FROM rbac.resource r, rbac.actions a;

INSERT INTO rbac.roles(name) VALUES
    ('ORG_ADMIN');

INSERT INTO rbac.resource_actions_roles(resource_actions_id, role_id)
    SELECT ra.id, 1 FROM rbac.resource_actions ra;

/* REMOVE IN PRODUCTION */

INSERT INTO userdata.users(name, email, provider, provider_details, password, verified, organization_id) VALUES
    ('Joseph Kanichai', 'kjosephsubash@gmail.com', 'email', '{"locale": "en-US","picture": "https://iupac.org/wp-content/uploads/2018/05/default-avatar.png"}',
    '$argon2id$v=19$m=65536,t=3,p=2$pVz5ubMpzehLSq/4D82/Vw$eFQQuWGjSspJjQnAyjm0Q7ii6puCW/w9P25+WZDFq9A', true, null);

END;